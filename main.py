import telebot
from telebot import types
import requests
from currency_converter import CurrencyConverter
from telebot.types import ReplyKeyboardMarkup, InlineKeyboardMarkup, InlineKeyboardButton
import os
import re

bot = telebot.TeleBot('6712197035:AAGQQh4ZXRQvk_Y9ff3gDtTeVkZAiG6I3YI')

URL = 'https://api.exchangerate-api.com/v4/latest/EUR'

response = requests.get(URL)
data = response.json()
rateEurRub = data['rates']['RUB']
rateEurCny = data['rates']['CNY']
rateCnyRub = rateEurRub/rateEurCny
ourRate = rateCnyRub + rateCnyRub * 0.0595
print(ourRate)

currency = CurrencyConverter()
comm = 0.15
course = 13.35 #–±–µ—Ä–µ–º +5,95% –æ—Ç –±–∏—Ä–∂–∏ –≥—É–≥–ª
prev_message = {}
prevbot_message = {}
sentm = ''
weight = 0
size = 0
link = ''
price = 0
priceCny = 0
photo1 = ''
last_sent_photos = {}
name = ''
number = ''
address = ''
promo_codes = ['egorny', 'nikitos']


# –ü–∞–ø–∫–∞ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π
messages_folder = 'user_messages'

# –ï—Å–ª–∏ –ø–∞–ø–∫–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, —Å–æ–∑–¥–∞–π—Ç–µ –µ–µ
if not os.path.exists(messages_folder):
    os.makedirs(messages_folder)

# –ü–∞–ø–∫–∞ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π
photos_folder = 'user_photos'

# –ü–∞–ø–∫–∞ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –ø—É—Ç–µ–π –∫ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è–º
paths_folder = 'photo_paths'

# –ï—Å–ª–∏ –ø–∞–ø–∫–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç, —Å–æ–∑–¥–∞–π—Ç–µ –∏—Ö
if not os.path.exists(photos_folder):
    os.makedirs(photos_folder)

if not os.path.exists(paths_folder):
    os.makedirs(paths_folder)

@bot.message_handler(commands=['start'])
def handle_start(message):
    markup = types.InlineKeyboardMarkup(row_width=1)  # –ú–æ–∂–Ω–æ —É–∫–∞–∑–∞—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–Ω–æ–ø–æ–∫ –≤ —Ä—è–¥—É

    button1 = types.InlineKeyboardButton("–û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑", callback_data='button_order')
    button2 = types.InlineKeyboardButton("–ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä —Å—Ç–æ–∏–º–æ—Å—Ç–∏", callback_data='button_calc')
    button3 = types.InlineKeyboardButton("–ö–∞—Ç–∞–ª–æ–≥", callback_data='button_catalogue')

    markup.add(button1, button2, button3)

    bot.send_message(message.chat.id, f'<b>üòâ–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç –≥—Ä—É–ø–ø—ã LOGISTIX!</b>\n\n'
                                f'–£–∂–µ 1.5 –≥–æ–¥–∞ –ø–æ–º–æ–≥–∞–µ–º –í–∞–º –∑–∞–∫–∞–∑—ã–≤–∞—Ç—å —Ç–æ–≤–∞—Ä—ã —Å <b>POIZON</b>',
                                # f'<b>-POIZON (DEWU)</b>\n'
                                # f'<b>-END CLOTHING</b>\n'
                                # f'<b>-YOOX</b>\n'
                                # f'<b>-–ò –î–†–£–ì–ò–ï</b>\n',
                                parse_mode="HTML", reply_markup = markup)



@bot.callback_query_handler(func=lambda call: True)
def handle_inline_button(callback_query):
        global sentm
        global weight
        global size
        global link
        print(callback_query.data)
        if callback_query.data == 'button_order':
            markup = types.InlineKeyboardMarkup(row_width=1)  # –ú–æ–∂–Ω–æ —É–∫–∞–∑–∞—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–Ω–æ–ø–æ–∫ –≤ —Ä—è–¥—É
            button1 = types.InlineKeyboardButton("–£—Ç–µ–ø–ª–µ–Ω–Ω—ã–µ –∫—Ä–æ—Å—Å–æ–≤–∫–∏ / –ë–æ—Ç–∏–Ω–∫–∏", callback_data='button_order1')
            button2 = types.InlineKeyboardButton("–ö–µ–¥—ã / –ö—Ä–æ—Å—Å–æ–≤–∫–∏ / –õ–µ–≥–∫–∞—è –æ–±—É–≤—å", callback_data='button_order2')
            button3 = types.InlineKeyboardButton("–ö—É—Ä—Ç–∫–∏", callback_data='button_order3')
            button4 = types.InlineKeyboardButton("–§—É—Ç–±–æ–ª–∫–∏ / –õ–æ–Ω–≥—Å–ª–∏–≤—ã", callback_data='button_order4')
            button5 = types.InlineKeyboardButton("–•—É–¥–∏ / C–≤–∏—Ç—à–æ—Ç—ã", callback_data='button_order5')
            button6 = types.InlineKeyboardButton("–®—Ç–∞–Ω—ã / –ë—Ä—é–∫–∏ / –î–∂–∏–Ω—Å—ã", callback_data='button_order6')
            button7 = types.InlineKeyboardButton("–ê–∫—Å–µ—Å—Å—É–∞—Ä—ã", callback_data='button_order7')
            markup.add(button1, button2, button3, button4, button5, button6, button7)
            bot.send_message(callback_query.message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é —Ç–æ–≤–∞—Ä–∞', reply_markup=markup)
            bot.answer_callback_query(callback_query.id)

        elif callback_query.data == 'button_calc':
            sentm = '–í–≤–µ–¥–∏—Ç–µ —Å—Ç–æ–∏–º–æ—Å—Ç—å –≤ ¬•'
            bot.send_message(callback_query.message.chat.id, "–í–≤–µ–¥–∏—Ç–µ —Å—Ç–æ–∏–º–æ—Å—Ç—å –≤ ¬•")
            bot.answer_callback_query(callback_query.id)

        elif callback_query.data == 'button_catalogue':
            bot.send_message(callback_query.message.chat.id, "–í —Ä–∞–∑—Ä–∞–±–æ–∫–µ...")
            bot.answer_callback_query(callback_query.id)

        if callback_query.data == 'start':
            handle_start(callback_query.message)
            bot.answer_callback_query(callback_query.id)

        if callback_query.data == 'button_order1':
            weight = 2000
            print(weight)
        elif callback_query.data == 'button_order2':
            weight = 1500
            print(weight)
        elif callback_query.data == 'button_order3':
            weight = 2000
            print(weight)
        elif callback_query.data == 'button_order4':
            weight = 1300
            print(weight)
        elif callback_query.data == 'button_order5':
            weight = 1500
            print(weight)
        elif callback_query.data == 'button_order6':
            weight = 1500
            print(weight)
        elif callback_query.data == 'button_order7':
            weight = 1000
            print(weight)

        if callback_query.data == 'button_order1' or callback_query.data == 'button_order2' or callback_query.data == 'button_order3' or callback_query.data == 'button_order4' or callback_query.data == 'button_order5' or callback_query.data == 'button_order6' or callback_query.data == 'button_order7':
            print('gbfdf')
            sentm = '—Ñ–æ—Ç–∫–∞'
            bot.send_message(callback_query.message.chat.id, 'üñº–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—Å—Ç–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ —Ç–æ–≤–∞—Ä–∞, –∫–∞–∫ –ø–æ–∫–∞–∑–∞–Ω–æ –Ω–∞ –ø—Ä–∏–º–µ—Ä–µ:')
            bot.answer_callback_query(callback_query.id)

        if callback_query.data ==  'button_confirm1':
            sentm = '–ö–∞—Ä—Ç–æ—á–∫–∞ –≤–µ—Ä–Ω–∞'
            bot.send_message(callback_query.message.chat.id,'üë∂–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –§–ò–û –ø–æ–ª–Ω–æ—Å—Ç—å—é –∫–∞–∫ –≤ –ø–∞—Å–ø–æ—Ä—Ç–µ (–Ω–∞–ø—Ä–∏–º–µ—Ä –ò–≤–∞–Ω–æ–≤ –ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤–∏—á):')
            sentm = '–ñ–¥–µ–º –§–ò–û'
            bot.answer_callback_query(callback_query.id)


@bot.message_handler(func=lambda message: True)
def handle_text(message):
    global ourRate
    global comm
    global sentm
    global size
    global link
    global price
    global priceCny
    global name
    global number
    global address
    global promo_codes

    user_id = str(message.from_user.id)
    user_message = message.text
    hide_markup = types.ReplyKeyboardRemove()

    # –°–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user_filename = os.path.join(messages_folder, f'{user_id}.txt')

    if message.text.isdigit() and sentm == '–í–≤–µ–¥–∏—Ç–µ —Å—Ç–æ–∏–º–æ—Å—Ç—å –≤ ¬•':
        inttext = int(message.text)
        res = inttext * ourRate + inttext * ourRate * comm + weight
        res = int(res) + bool(res % 1)
        mess = f'{res}'
        bot.send_message(message.chat.id, '–ö –æ–ø–ª–∞—Ç–µ: '+ mess + '‚ÇΩ')
        sentm = ''

    elif sentm == '–í–≤–µ–¥–∏—Ç–µ —Å—Ç–æ–∏–º–æ—Å—Ç—å –≤ ¬•':
        bot.send_message(message.chat.id, '–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç, –≤–≤–µ–¥–∏—Ç–µ —Å—Ç–æ–∏–º–æ—Å—Ç—å')

    elif sentm == '–§–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è –ø—Ä–∏–Ω—è—Ç–∞':
        link_to_check = user_message
        check_mask = re.compile(r'^https://dw4.co/t/A/(?=.*[a-z])(?=.*[A-Z])(?=.*\d)[a-zA-Z\d]{8}$')
        result = check_mask.match(link_to_check)

        if result:
            with open(user_filename, 'a') as file:
                file.write('Link: ' + user_message + '\n')
            bot.send_message(message.chat.id, "–°—Å—ã–ª–∫–∞ –ø—Ä–∏–Ω—è—Ç–∞")
            sentm = '–°—Å—ã–ª–∫–∞ –ø—Ä–∏–Ω—è—Ç–∞'
            keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
            item1 = types.KeyboardButton("–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å")
            keyboard.add(item1)
            bot.send_message(message.chat.id, "üìè–£–∫–∞–∂–∏—Ç–µ —Ä–∞–∑–º–µ—Ä –∏–ª–∏ –∫–æ–º–ø–ª–µ–∫—Ç–Ω–æ—Å—Ç—å. –ï—Å–ª–∏ —É –í–∞—à–µ–≥–æ —Ç–æ–≤–∞—Ä–∞ –Ω–µ—Ç —Ç–∞–∫–æ–≥–æ –≤—ã–±–æ—Ä–∞ - –Ω–∞–∂–º–∏—Ç–µ '–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å'", reply_markup=keyboard)
            link = link_to_check

        else:
            bot.send_message(message.chat.id, "–û—à–∏–±–∫–∞! –í–≤–µ–¥–µ–Ω–Ω–∞—è —Å—Å—ã–ª–∫–∞ –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å–≤—É–µ—Ç –º–∞—Å–∫–µ –≤–≤–æ–¥–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑")

    elif sentm == '–°—Å—ã–ª–∫–∞ –ø—Ä–∏–Ω—è—Ç–∞':
        with open(user_filename, 'a') as file:
            file.write('Size: ' + user_message + '\n')
        bot.send_message(message.chat.id, "–ü—Ä–∏–Ω—è—Ç–æ", reply_markup=hide_markup)
        sentm = '–†–∞–∑–º–µ—Ä –ø—Ä–∏–Ω—è—Ç'
        bot.send_message(message.chat.id, "‚ö†Ô∏è –í–≤–µ–¥–∏—Ç–µ —Å—Ç–æ–∏–º–æ—Å—Ç—å –≤—ã–±—Ä–∞–Ω–Ω–æ–π –≤–µ—â–∏ –í –Æ–ê–ù–Ø–• (–∑–∞—á–µ—Ä–∫–Ω—É—Ç–∞—è —Ü–µ–Ω–∞).‚õîÔ∏è‚õîÔ∏è –ï—Å–ª–∏ –í—ã —Ä–∞—Å—Å—á–∏—Ç–∞–ª–∏ –∏–ª–∏ –æ–ø–ª–∞—Ç–∏–ª–∏ –Ω–µ–≤–µ—Ä–Ω—É—é —Å—É–º–º—É –∏–ª–∏ –∑–∞–∫–∞–∑–∞–ª–∏ –ø–æ ‚âà —Ç–æ –±—É–¥–µ—Ç —Å–¥–µ–ª–∞–Ω –≤–æ–∑–≤—Ä–∞—Ç —Å—Ä–µ–¥—Å—Ç–≤ –≤ —Ç–µ—á–µ–Ω–∏–∏ 10 —Ä–∞–±–æ—á–∏—Ö –¥–Ω–µ–π –ë–ï–ó –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –¥–æ–ø–ª–∞—Ç—ã! ‚õîÔ∏è‚õîÔ∏è")
        size = user_message

    elif sentm == '–†–∞–∑–º–µ—Ä –ø—Ä–∏–Ω—è—Ç' and message.text.isdigit():
        if size == '–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å':
            size = '-'
        with open(user_filename, 'a') as file:
            file.write(user_message + '\n')
        priceCny = int(message.text)
        price = priceCny * ourRate + priceCny * ourRate * comm + weight
        price = int(price) + bool(price % 1)
        #price = f'{price}'
        #bot.send_message(message.chat.id, '–ö –æ–ø–ª–∞—Ç–µ: ' + price + '‚ÇΩ')
        sentm = ''
        admin_user_id = '6173381955'  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ ID –≤–∞—à–µ–≥–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
        if user_id in last_sent_photos:
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ—Å–ª–µ–¥–Ω—é—é —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—É—é —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é
            with open(last_sent_photos[user_id], 'rb') as photo:
                markup = types.InlineKeyboardMarkup(row_width=1)  # –ú–æ–∂–Ω–æ —É–∫–∞–∑–∞—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–Ω–æ–ø–æ–∫ –≤ —Ä—è–¥—É
                button1 = types.InlineKeyboardButton("–í—Å–µ –≤–µ—Ä–Ω–æ", callback_data='button_confirm1')
                button2 = types.InlineKeyboardButton("–ò–∑–º–µ–Ω–∏—Ç—å", callback_data='button_decline1')
                markup.add(button1, button2)
                bot.send_photo(user_id, photo, caption=f'<b>–°—Å—ã–ª–∫–∞: </b> {link}\n'
                                            f'<b>–†–∞–∑–º–µ—Ä –∏–ª–∏ –∫–æ–º–ø–ª–µ–∫—Ç–Ω–æ—Å—Ç—å: </b> {size}\n'
                                            f'<b>–°—Ç–æ–∏–º–æ—Å—Ç—å –≤ ¬•: </b> {priceCny}\n'
                                            f'<b>–°—Ç–æ–∏–º–æ—Å—Ç—å –≤ ‚ÇΩ: </b> {price}\n', parse_mode="HTML", reply_markup = markup)
                


        # bot.send_message(message.chat.id, f'<b>–°—Å—ã–ª–∫–∞ –Ω–∞ —Ç–æ–≤–∞—Ä: </b> {link}\n'
        #                                    f'<b>–†–∞–∑–º–µ—Ä –∏–ª–∏ –∫–æ–º–ª–ø–µ–∫—Ç–Ω–æ—Å—Ç—å: </b> {size}\n'
        #                                    f'<b>–°—Ç–æ–∏–º–æ—Å—Ç—å –≤ ¬•: </b> {priceCny}\n'
        #                                    f'<b>–°—Ç–æ–∏–º–æ—Å—Ç—å –≤ ‚ÇΩ, —Å —É—á–µ—Ç–æ–º –¥–æ—Å—Ç–∞–≤–∫–∏ –ø–æ –†–æ—Å—Å–∏–∏: </b> {price}\n', parse_mode="HTML")
        # bot.send_photo(message.chat.id, photo1)#caption =  f'<b>–°—Å—ã–ª–∫–∞ –Ω–∞ —Ç–æ–≤–∞—Ä: </b> {link}\n'
                                           #f'<b>–†–∞–∑–º–µ—Ä –∏–ª–∏ –∫–æ–º–ª–ø–µ–∫—Ç–Ω–æ—Å—Ç—å: </b> {size}\n'
                                           #f'<b>–°—Ç–æ–∏–º–æ—Å—Ç—å –≤ ¬•: </b> {priceCny}\n'
                                           #f'<b>–°—Ç–æ–∏–º–æ—Å—Ç—å –≤ ‚ÇΩ, —Å —É—á–µ—Ç–æ–º –¥–æ—Å—Ç–∞–≤–∫–∏ –ø–æ –†–æ—Å—Å–∏–∏: </b> {price}\n', parse_mode="HTML")
        #admin_message = f'–ù–æ–≤—ã–π –∑–∞–∫–∞–∑ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}:\n\n{user_message}'
        # bot.send_message(admin_user_id, f'–ù–æ–≤—ã–π –∑–∞–∫–∞–∑ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}!\n'
        #                                   f'<b>–°—Å—ã–ª–∫–∞ –Ω–∞ —Ç–æ–≤–∞—Ä: </b> {link}\n'
        #                                   f'<b>–†–∞–∑–º–µ—Ä –∏–ª–∏ –∫–æ–º–ª–ø–µ–∫—Ç–Ω–æ—Å—Ç—å: </b> {size}\n'
        #                                   f'<b>–°—Ç–æ–∏–º–æ—Å—Ç—å –≤ ¬•: </b> {priceCny}\n'
        #                                   f'<b>–°—Ç–æ–∏–º–æ—Å—Ç—å –≤ ‚ÇΩ, —Å —É—á–µ—Ç–æ–º –¥–æ—Å—Ç–∞–≤–∫–∏ –ø–æ –†–æ—Å—Å–∏–∏: </b> {price}\n', parse_mode="HTML")

    elif sentm == '–†–∞–∑–º–µ—Ä –ø—Ä–∏–Ω—è—Ç':
        bot.send_message(message.chat.id, '–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç, –≤–≤–µ–¥–∏—Ç–µ —Å—Ç–æ–∏–º–æ—Å—Ç—å')

    elif sentm == '–ñ–¥–µ–º –§–ò–û':
        name = user_message
        bot.send_message(message.chat.id, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ +79998887766:')
        sentm = '–ñ–¥–µ–º –Ω–æ–º–µ—Ä'

    elif sentm == '–ñ–¥–µ–º –Ω–æ–º–µ—Ä':
        num_to_check = user_message
        num_mask = re.compile(r'^\+79\d{9}$')
        result = num_mask.match(num_to_check)

        if result:
            # with open(user_filename, 'a') as file:
            #     file.write('Link: ' + user_message + '\n')
            number = num_to_check
            bot.send_message(message.chat.id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∞–¥—Ä–µ—Å –ø—É–Ω–∫—Ç–∞ –≤—ã–¥–∞—á–∏ –°–î–≠–ö –≤ —Ñ–æ—Ä–º–∞—Ç–µ (–°—Ç—Ä–∞–Ω–∞, –û–±–ª–∞—Å—Ç—å, –ì–æ—Ä–æ–¥, –£–ª–∏—Ü–∞, –ù–æ–º–µ—Ä –¥–æ–º–∞):")
            sentm = '–ñ–¥–µ–º –∞–¥—Ä–µ—Å'

        else:
            bot.send_message(message.chat.id,"–û—à–∏–±–∫–∞! –í–≤–µ–¥–µ–Ω–Ω—ã–π –Ω–æ–º–µ—Ä –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å–≤—É–µ—Ç –º–∞—Å–∫–µ –≤–≤–æ–¥–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑")

    elif sentm == '–ñ–¥–µ–º –∞–¥—Ä–µ—Å':
        address = user_message
        keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
        item1 = types.KeyboardButton("–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å")
        keyboard.add(item1)
        bot.send_message(message.chat.id,"–í–≤–µ–¥–∏—Ç–µ –ø—Ä–æ–º–æ–∫–æ–¥. –ï—Å–ª–∏ —É –í–∞—Å –Ω–µ—Ç –ø—Ä–æ–º–æ–∫–æ–¥–∞ - –Ω–∞–∂–º–∏—Ç–µ '–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å'", reply_markup=keyboard)
        sentm = '–ñ–¥–µ–º –ø—Ä–æ–º–æ–∫–æ–¥'

    elif sentm == '–ñ–¥–µ–º –ø—Ä–æ–º–æ–∫–æ–¥':
        if user_message in promo_codes:
            bot.send_message(message.chat.id,"–°—É–ø–µ—Ä! –°–∫–∏–¥–∫–∞ 5% –Ω–∞ –∫–æ–º–∏—Å—Å–∏—é –ø—Ä–∏–º–µ–Ω–µ–Ω–∞", reply_markup=hide_markup)
            comm = comm - 0.05
            price = priceCny * ourRate + priceCny * ourRate * comm + weight
            price = int(price) + bool(price % 1)
            if user_id in last_sent_photos:
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ—Å–ª–µ–¥–Ω—é—é —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—É—é —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é
                with open(last_sent_photos[user_id], 'rb') as photo:
                    markup = types.InlineKeyboardMarkup(row_width=1)  # –ú–æ–∂–Ω–æ —É–∫–∞–∑–∞—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–Ω–æ–ø–æ–∫ –≤ —Ä—è–¥—É
                    button1 = types.InlineKeyboardButton("–í—Å–µ –≤–µ—Ä–Ω–æ", callback_data='button_confirm1')
                    button2 = types.InlineKeyboardButton("–ò–∑–º–µ–Ω–∏—Ç—å", callback_data='button_decline1')
                    markup.add(button1, button2)
                    bot.send_photo(user_id, photo, caption=f'<b>–°—Å—ã–ª–∫–∞: </b> {link}\n'
                                                           f'<b>–†–∞–∑–º–µ—Ä –∏–ª–∏ –∫–æ–º–ø–ª–µ–∫—Ç–Ω–æ—Å—Ç—å: </b> {size}\n'
                                                           f'<b>–°—Ç–æ–∏–º–æ—Å—Ç—å –≤ ¬•: </b> {priceCny}\n'
                                                           f'<b>–°—Ç–æ–∏–º–æ—Å—Ç—å –≤ ‚ÇΩ: </b> {price}\n'
                                                           f'<b>–§–ò–û –ø–æ–ª—É—á–∞—Ç–µ–ª—è: </b> {name}\n'
                                                           f'<b>–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: </b> {number}\n'
                                                           f'<b>–ê–¥—Ä–µ—Å –ü–í–ó: </b> {address}\n'
                                   , parse_mode="HTML",
                                   reply_markup=hide_markup)
        elif user_message == '–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å':
            if user_id in last_sent_photos:
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ—Å–ª–µ–¥–Ω—é—é —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—É—é —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é
                with open(last_sent_photos[user_id], 'rb') as photo:
                    markup = types.InlineKeyboardMarkup(row_width=1)  # –ú–æ–∂–Ω–æ —É–∫–∞–∑–∞—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–Ω–æ–ø–æ–∫ –≤ —Ä—è–¥—É
                    button1 = types.InlineKeyboardButton("–í—Å–µ –≤–µ—Ä–Ω–æ", callback_data='button_confirm1')
                    button2 = types.InlineKeyboardButton("–ò–∑–º–µ–Ω–∏—Ç—å", callback_data='button_decline1')
                    markup.add(button1, button2)
                    bot.send_photo(user_id, photo, caption=f'<b>–°—Å—ã–ª–∫–∞: </b> {link}\n'
                                                           f'<b>–†–∞–∑–º–µ—Ä –∏–ª–∏ –∫–æ–º–ø–ª–µ–∫—Ç–Ω–æ—Å—Ç—å: </b> {size}\n'
                                                           f'<b>–°—Ç–æ–∏–º–æ—Å—Ç—å –≤ ¬•: </b> {priceCny}\n'
                                                           f'<b>–°—Ç–æ–∏–º–æ—Å—Ç—å –≤ ‚ÇΩ: </b> {price}\n'
                                                           f'<b>–§–ò–û –ø–æ–ª—É—á–∞—Ç–µ–ª—è: </b> {name}\n'
                                                           f'<b>–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: </b> {number}\n'
                                                           f'<b>–ê–¥—Ä–µ—Å –ü–í–ó: </b> {address}\n'
                                   , parse_mode="HTML",
                                   reply_markup=hide_markup)
        else:
            bot.send_message(message.chat.id, "–ù–µ –Ω–∞—à–µ–ª —Ç–∞–∫–æ–≥–æ –ø—Ä–æ–º–æ–∫–æ–¥–∞. –í–≤–µ–¥–∏—Ç–µ –µ—â–µ —Ä–∞–∑, –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ '–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å'")


    else:
        sentm = ''
        markup = types.InlineKeyboardMarkup(row_width=1)  # –ú–æ–∂–Ω–æ —É–∫–∞–∑–∞—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–Ω–æ–ø–æ–∫ –≤ —Ä—è–¥—É
        button1 = types.InlineKeyboardButton("–í –Ω–∞—á–∞–ª–æ", callback_data='start')
        markup.add(button1)
        bot.send_message(message.chat.id, '–Ø –µ—â–µ –Ω–µ –∑–Ω–∞—é, –∫–∞–∫ –æ—Ç–≤–µ—á–∞—Ç—å –Ω–∞ —ç—Ç—É –∫–æ–º–∞–Ω–¥—É :(', reply_markup = markup)


@bot.message_handler(content_types=['photo'])
def handle_photo(message):
    global sentm
    global photo1
    if sentm == '—Ñ–æ—Ç–∫–∞':
        user_id = str(message.from_user.id)
        file_id = message.photo[-1].file_id

        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏
        file_info = bot.get_file(file_id)
        file_path = file_info.file_path

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é
        photo_file = bot.download_file(file_path)
        photo_filename = os.path.join(photos_folder, f'{user_id}_{file_id}.jpg')
        with open(photo_filename, 'wb') as file:
            file.write(photo_file)
        last_sent_photos[user_id] = photo_filename

        # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –ø—É—Ç—å –∫ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –≤ —Ñ–∞–π–ª
        # paths_filename = os.path.join(paths_folder, f'{user_id}_paths.txt')
        # with open(paths_filename, 'a') as file:
        #     file.write(photo_filename + '\n')
        #     photo1 = photo_filename
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        bot.send_message(message.chat.id, "–§–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è –ø—Ä–∏–Ω—è—Ç–∞")
        sentm = '–§–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è –ø—Ä–∏–Ω—è—Ç–∞'
        bot.send_message(message.chat.id,'üîó–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ —Ç–æ–≤–∞—Ä –≤ –Ω—É–∂–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ https://dw4.co/t/A/18KfFHsf:')

        #admin_user_id = '6173381955'  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ ID –≤–∞—à–µ–≥–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
        #admin_message = f'–ù–æ–≤–∞—è —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}:\n{photo_filename}'
        #with open(photo_filename, 'rb') as photo:
        #   bot.send_message(admin_user_id, admin_message)
    else:
        markup = types.InlineKeyboardMarkup(row_width=1)  # –ú–æ–∂–Ω–æ —É–∫–∞–∑–∞—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–Ω–æ–ø–æ–∫ –≤ —Ä—è–¥—É
        button1 = types.InlineKeyboardButton("–í –Ω–∞—á–∞–ª–æ", callback_data='start')
        markup.add(button1)
        bot.send_message(message.chat.id, '–ü–æ—Å—Ç–∞–≤–ª—é —Å–µ–±–µ –Ω–∞ –æ–±–æ–∏ üòâ', reply_markup=markup)

bot.polling(none_stop=True)